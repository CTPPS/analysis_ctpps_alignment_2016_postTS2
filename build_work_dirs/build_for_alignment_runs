#!/bin/bash

function GetOne()
{
	local fill="$1"
	local xangle="$2"
	local ds="$3"
	local search="$4"

	# make work directory
	local dir="$top_dir/fill_$fill/xangle_$xangle/$ds/"
	mkdir -p "$dir"

	# get input files
	input_files=""
	for f in `eos ls "$eos_dir"|grep "$search"|grep ".root"`
	do
		input_files="${input_files}input_files.append(\"root://eostotem.cern.ch/${eos_dir}/${f}\")\n"
	done

	# make config with input files
	(
		echo "import FWCore.ParameterSet.Config as cms"
		echo ""
		echo "input_files = cms.vstring()"
		echo -e "$input_files"
	) > "$dir/input_files.py"

	# if not present, make (default) config
	if [ ! -f "$dir/config.py" ]
	then
		cp "config_template.py" "$dir/config.py"
	fi
}

#----------------------------------------------------------------------------------------------------

top_dir="../data/alig-version1"
#eos_dir="/eos/cms/store/group/phys_pps/reconstruction/2016/alignment_run_September/version2" # only track based alignment
#GetOne "5322" "140" "DS1" "10332\|10331\|10329\|10328\|10327"
#GetOne "5322" "140" "DS2" "10326\|10325\|10324\|10322\|10323"

top_dir="../data/alig-version2" # only track based alignment
eos_dir="/eos/cms/store/group/phys_pps/reconstruction/2016/alignment_run_September/version3" # first full alignment
GetOne "5322" "140" "DS1" "10332\|10331\|10329\|10328\|10327"
GetOne "5322" "140" "DS2" "10326\|10325\|10324\|10322\|10323"
